buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        lombokVersion = "1.16.20"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'net.ltgt.apt' version '0.9'
}

apply plugin: 'net.ltgt.apt'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileJava {
    options.fork = true
    options.encoding = "UTF-8"
    //options.compilerArgs << "-Xmx2048m" <<"-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.fork = true
    options.failOnError = true
    options.encoding = "UTF-8"
}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "build/generated/sources/annotationProcessor/java/main"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework:spring-context")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("io.springfox:springfox-swagger2:2.6.1")
    compile("io.springfox:springfox-swagger-ui:2.6.1")
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compile("org.elasticsearch:elasticsearch:6.4.2")
    compile("org.elasticsearch.client:transport:6.4.2"){
        exclude group: 'org.elasticsearch'
    }
    compile("com.alibaba:fastjson:1.2.39")
    compile("org.apache.commons:commons-lang3:3.4")
    compile("commons-httpclient:commons-httpclient:3.1")

    testCompile("org.springframework.boot:spring-boot-starter-test")


}
